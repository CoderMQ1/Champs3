//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : MetaMask Unity SDK ABI Code Generator
//   Input filename:  Shop.sol
//   Output filename: Shop.cs
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#if  MetamaskPlugin


using System;
using System.Numerics;
using System.Threading.Tasks;
using evm.net;
using evm.net.Models;

namespace ShopContract
{
	#if  ( UNITY_EDITOR || !ENABLE_MONO)
	[BackedType(typeof(ShopContractBacking))]
	#endif
	public interface ShopContract : IContract
	{
		[EvmConstructorMethod]
		Task<ShopContract> DeployNew();
		
		[EvmMethodInfo(Name = "buyGood", View = false)]
		Task<Transaction> BuyGood(BigInteger itemId, BigInteger amount, CallOptions options = default);
		
		[EvmMethodInfo(Name = "gameAsset", View = true)]
		Task<EvmAddress> GameAsset();
		
		[EvmMethodInfo(Name = "gameConfg", View = true)]
		Task<EvmAddress> GameConfg();
		
		[EvmMethodInfo(Name = "goodExist", View = true)]
		Task<Boolean> GoodExist([EvmParameterInfo(Type = "uint256", Name = "")] BigInteger id, CallOptions options = default);
		
		[EvmMethodInfo(Name = "loadShopSet", View = false)]
		Task<Transaction> LoadShopSet(EvmAddress gameConfigContract, EvmAddress gameAssetContract, CallOptions options = default);
		
		[EvmMethodInfo(Name = "owner", View = true)]
		Task<EvmAddress> Owner();
		
		[EvmMethodInfo(Name = "payToken", View = true)]
		Task<EvmAddress> PayToken();
		
		[EvmMethodInfo(Name = "receiver", View = true)]
		Task<EvmAddress> Receiver();
		
		[EvmMethodInfo(Name = "renounceOwnership", View = false)]
		Task<Transaction> RenounceOwnership();
		
		[EvmMethodInfo(Name = "shopGoodItems", View = true)]
		Task<Tuple<BigInteger, BigInteger, BigInteger>> ShopGoodItems([EvmParameterInfo(Type = "uint256", Name = "")] BigInteger id, CallOptions options = default);
		
		[EvmMethodInfo(Name = "transferOwnership", View = false)]
		Task<Transaction> TransferOwnership(EvmAddress newOwner, CallOptions options = default);
		
	}
}
#endif